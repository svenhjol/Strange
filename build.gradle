buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
plugins {
    id "com.wynprice.cursemaven" version "2.1.1"
}
apply plugin: 'net.minecraftforge.gradle'

ext.configFile = file('gradle.properties')
ext.config = parseConfig(configFile)

group = "svenhjol.strange" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Strange"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

version = "${mc_version}-${version}.${build_number}"

minecraft {
    mappings channel: 'snapshot', version: "${mcp_mappings}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client = {
            // recommended logging data for a userdev environment
//            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            properties 'forge.logging.markers': 'REGISTRIES'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
            jvmArgs "-Xmx2000M"
        }
        server = {
            // recommended logging data for a userdev environment
//            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            properties 'forge.logging.markers': 'REGISTRIES'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    compile fg.deobf("svenhjol.charm:Charm:${charm}")
    compile fg.deobf("curse.maven:${autoreglib}")
    compile fg.deobf("curse.maven:${quark}")
    compile fg.deobf("curse.maven:${quark_oddities}")
    compile fg.deobf("curse.maven:${locatebiome}")

    compileOnly fg.deobf("mezz.jei:jei-${jei}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${jei}")
//    compile fg.deobf("curse.maven:${terraforged}")
//    compile fg.deobf("curse.maven:zombie-horse-spawn:2810326")
}

repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "https://tehnut.info/maven"
    }

    maven { // for JEI
        url "http://dvs1.progwml6.com/files/maven"
    }

    maven { // for HWYLA
        name 'Mobius'
        url "https://tehnut.info/maven"
    }

    maven { // for AutoRegLib and Quark
        name "blamejared"
        url "http://maven.blamejared.com/"
    }

    maven { // for Curseforge mod download
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }

    flatDir {
        dirs "libs"
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand 'version': version, 'mc_version': mc_version, 'forge_version': forge_version
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "Strange",
            "Specification-Vendor": "svenhjol",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": "Strange",
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"svenhjol",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

static def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}